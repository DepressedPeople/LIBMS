{"ast":null,"code":"import { Borrower } from '../model/borrower';\nimport { map } from 'rxjs';\nimport { Book } from \"../model/book\";\nimport { PaginatedBook } from \"../model/paginated-book\";\nimport { environment } from \"../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let LibraryService = /*#__PURE__*/(() => {\n  var _class;\n  class LibraryService {\n    constructor(http) {\n      this.http = http;\n      this.apiURL = environment.apiUrl;\n    }\n    addBorrower(borrower) {\n      return this.http.post(this.apiURL + 'borrower', borrower);\n    }\n    search(searchQuery, page, size) {\n      return this.http.get(this.apiURL + 'search/books?q=' + searchQuery + '&page=' + page + '&size=' + size).pipe(map(paginatedBook => {\n        return this.mapPaginatedBookData(paginatedBook);\n      }));\n    }\n    mapPaginatedBookData(paginatedBook) {\n      let books = paginatedBook.books.map(b => {\n        const book = new Book();\n        book.authors = b.authors;\n        book.isbn = b.isbn;\n        book.concatenatedAuthors = b.authors.map(z => z.name).join(\", \");\n        book.cover = b.cover;\n        book.title = b.title;\n        book.pages = b.pages;\n        book.available = b.available;\n        if (b.borrower) {\n          const borrower = new Borrower();\n          borrower.cardId = b.borrower.cardId;\n          borrower.name = b.borrower.name;\n          book.borrower = borrower;\n        }\n        return book;\n      });\n      let page = paginatedBook.pagination;\n      const paginated = new PaginatedBook();\n      paginated.pagination = page;\n      paginated.books = books;\n      return paginated;\n    }\n    addLoan(bookLoan) {\n      return this.http.post(this.apiURL + 'borrower/checkout', bookLoan);\n    }\n    calculateFines() {\n      return this.http.post(this.apiURL + 'fine/calculate', {});\n    }\n    searchToCheckIn(checkIn, page, size) {\n      return this.http.get(this.apiURL + 'search/borrower?name=' + checkIn.name + '&cardId=' + checkIn.cardId + '&isbn=' + checkIn.isbn + '&page=' + page + '&size=' + size).pipe(map(paginatedBook => {\n        return this.mapPaginatedBookData(paginatedBook);\n      }));\n    }\n    checkIn(checkInBook) {\n      return this.http.post(this.apiURL + 'borrower/checkIn', checkInBook);\n    }\n    showFines() {\n      return this.http.get(this.apiURL + 'fines');\n    }\n    payFine(fine) {\n      return this.http.post(this.apiURL + 'fine', fine);\n    }\n    getFineForCardId(cardId) {\n      return this.http.get(this.apiURL + 'fine?cardId=' + cardId);\n    }\n  }\n  _class = LibraryService;\n  _class.ɵfac = function LibraryService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac\n  });\n  return LibraryService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}